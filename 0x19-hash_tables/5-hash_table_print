#include "hash_tables.h"

/**
 * hash_table_print - prints a hash table
 * @ht: hash table to print
 * Return: void
 */

void hash_table_print(const hash_table_t *ht)
{
	unsigned int index;
	hash_node_t *tempNode = NULL;
	unsigned int count = 0;

	index = 0;
	printf("{");
	for (index = 0; index < 1025; index++)
	{
		tempNode = ht->array[index];
		if (index <= 1025)
		{
			printf("'%s':'%s'", tempNode->key, tempNode->value);
			for (index = index; index < 1025; index++)
			{
				if (ht->array[index] != NULL)
				{
					count += 1;
				}

			}
			if (index != 0)
			{
				printf(", ");
			}
		}
	}
	printf("}");
}
/**






			for (k = 0; k < (ht->size - index) - 5; k++)
			{
				saved_node = tempNode;
				tempNode = tempNode->next;
				if (tempNode != NULL)
				{
					getchar();
					count += 1;
				}
			}
			tempNode = saved_node;

		}
	}
	printf("}\n");
}
*/
